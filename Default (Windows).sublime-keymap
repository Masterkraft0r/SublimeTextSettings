[
  // ---------------------------------------------------------------------------
  // -- SublimeText2 --
  // ---------------------------------------------------------------------------

  {
    "caption": "SublimeText: Extend selection to current line",
    "keys": ["super+l"],
    "command": "expand_selection",
    "args": {"to": "line"}
  },
  {
    "caption": "SublimeText: Extend selection to current scope",
    "keys": ["super+s"],
    "command": "expand_selection",
    "args": {"to": "scope"}
  },
  {
    "caption": "SublimeText: Extend selection to current brackets",
    "keys": ["super+b"],
    "command": "expand_selection",
    "args": {"to": "brackets"}
  },
  {
    "caption": "SublimeText: Extend selection to current indentation block",
    "keys": ["super+i"],
    "command": "expand_selection",
    "args": {"to": "indentation"}
  },
  {
    "caption": "SublimeText: Extend selection to current word",
    "keys": ["super+w"],
    "command": "expand_selection",
    "args": {"to": "word"}
  },
  {
    "caption": "SublimeText: Toggle sublime text console",
    "keys": ["alt+s", "alt+c"],
    "command": "show_panel",
    "args": {"panel": "console", "toggle": true}
  },
  {
    "caption": "SublimeText: Toggle side bar",
    "keys": ["alt+s", "alt+s"],
    "command": "toggle_side_bar"
  },
  {
    "caption": "SublimeText: Toggle minimap",
    "keys": ["alt+s", "alt+m"],
    "command": "toggle_minimap"
  },
  {
    "caption": "SublimeText: Toggle comment",
    "keys": ["alt+c"],
    "command": "toggle_comment",
    "args": {"block": false}
  },

  // ---------------------------------------------------------------------------
  // -- Package Control --
  // ---------------------------------------------------------------------------

  {
    "caption": "Package Control: Install package",
    "keys": ["alt+p", "alt+i"],
    "command": "install_package"
  },
  {
    "caption": "Package Control: Remove package",
    "keys": ["alt+p", "alt+r"],
    "command": "remove_package"
  },
  {
    "caption": "Package Control: List packages",
    "keys": ["alt+p", "alt+l"],
    "command": "list_packages"
  },
  {
    "caption": "Package Control: Upgrade all packages",
    "keys": ["alt+p", "alt+u"],
    "command": "upgrade_all_packages"
  },

  // ---------------------------------------------------------------------------
  // -- BracketHighlighter --
  // ---------------------------------------------------------------------------

  {
    "caption": "BracketHighlighter: Toggle global enable",
    "keys": ["alt+b", "alt+e"],
    "command": "bh_toggle_enable"
  },
  {
    "caption": "BracketHighlighter: Search to end of file for closing bracket",
    "keys": ["alt+b", "alt+b"],
    "command": "bh_key",
    "args": {"lines" : true}
  },
  {
    "caption": "BracketHighlighter: Remove brackets",
    "keys": ["alt+b", "alt+r"],
    "command": "bh_remove_brackets"
  },
  {
    "caption": "BracketHighlighter: Go to left bracket",
    "keys": ["alt+b", "alt+u"],
    "command": "bh_key",
    "args": {"lines": true, "plugin": {"type": ["__all__"],
                                       "command": "bh_modules.bracketselect",
                                       "args": {"select": "left"}}}
  },
  {
    "caption": "BracketHighlighter: Go to right bracket",
    "keys": ["alt+b", "alt+o"],
    "command": "bh_key",
    "args":
    {
      "lines" : true,
      "plugin":
      {
        "type": ["__all__"],
        "command": "bh_modules.bracketselect",
        "args": {"select": "right"}
      }
    }
  },
  {
    "caption": "BracketHighlighter: Select tag name of HTML/XML tag (both opening name and closing)",
    "keys": ["alt+b", "alt+t"],
    "command": "bh_key",
    "args":
    {
      "plugin":
      {
        "type": ["cfml", "html", "angle"],
        "command": "bh_modules.tagnameselect"
      }
    }
  },
  {
    "caption": "BracketHighlighter: Convert single quote string to double quoted string and vice versa",
    "keys": ["alt+b", "alt+q"],
    "command": "bh_key",
    "args":
    {
      "lines" : true,
      "plugin":
      {
        "type": ["single_quote", "double_quote", "py_single_quote", "py_double_quote"],
        "command": "bh_modules.swapquotes"
      }
    }
  },
  {
    "caption": "BracketHighlighter: Fold contents between brackets",
    "keys": ["alt+b", "alt+f"],
    "command": "bh_key",
    "args":
    {
      "plugin":
      {
        "type": ["__all__"],
        "command" : "bh_modules.foldbracket"
      }
    }
  },
  {
    "caption": "BracketHighlighter: Swap brackets with another type",
    "keys": ["alt+b", "alt+s"],
    "command": "swap_brackets"
  },
  {
    "caption": "BracketHighlighter: Surround selection with brackets from quick panel",
    "keys": ["alt+b", "alt+b"],
    "command": "wrap_brackets"
  },
  {
    "caption": "BracketHighlighter: Toggle high visibility mode",
    "keys": ["alt+b", "alt+v"],
    "command": "bh_toggle_high_visibility"
  },

  // ---------------------------------------------------------------------------
  // -- FilterLines --
  // ---------------------------------------------------------------------------

  {
    "caption": "FilterLines: Search for a regex in lines of current file",
    "keys": ["ctrl+l", "ctrl+r"],
    "command": "filter_to_lines",
    "args":
    {
      "search_type": "regex"
    }
  },
  {
    "caption": "FilterLines: Search for a string in lines of current file",
    "keys": ["ctrl+l", "ctrl+s"],
    "command": "filter_to_lines",
    "args":
    {
      "search_type": "string"
    }
  },

  // ---------------------------------------------------------------------------
  // -- Goto Documentation --
  // ---------------------------------------------------------------------------

  {
    "caption": "Goto documentation",
    "keys": ["alt+d"],
    "command": "goto_documentation"
  },

  // ---------------------------------------------------------------------------
  // -- LaTeXing --
  // ---------------------------------------------------------------------------

  // ---------------------------------------------------------------------------
  // -- LaTeXTools --
  // ---------------------------------------------------------------------------

  // ---------------------------------------------------------------------------
  // -- Markdown Preview --
  // ---------------------------------------------------------------------------

  {
    "caption": "Markdown Preview",
    "keys": ["alt+m"],
    "command": "markdown_preview",
    "args":
    {
      "target": "browser",
      "parser":"markdown"
    }
  },

  // ---------------------------------------------------------------------------
  // -- QuickRef --
  // ---------------------------------------------------------------------------

  {
    "caption": "QuickRef: Toggle QuickRef",
    "keys": ["alt+q"],
    "command": "quick_ref",
    "args":
    {
      "regular_run_mode": true
    }
  },
  {
    "caption": "QuickRef: Toggle QuickRef (Edit Favourites)",
    "keys": ["alt+shift+q"],
    "command": "quick_ref"
  },

  // ---------------------------------------------------------------------------
  // -- Search Stackoverflow --
  // ---------------------------------------------------------------------------

  {
    "caption": "Stackoverflow: Search Selection",
    "keys": ["alt+s"],
    "command": "stackoverflow_search_selection",
    "context":
    [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": false
      }
    ]
  },
  {
    "caption": "Stackoverflow: Search from Input",
    "keys": ["alt+s"],
    "command": "stackoverflow_search_from_input",
    "context":
    [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true
      }
    ]
  },

  // ---------------------------------------------------------------------------
  // -- SendText --
  // ---------------------------------------------------------------------------

  {
    "caption": "SendText: Send current line/selection to terminal",
    "keys": ["alt+enter"],
    "command": "send_selection"
  },

  // ---------------------------------------------------------------------------
  // -- SublimeCodeIntel --
  // ---------------------------------------------------------------------------

  {
    "caption": "SublimeCodeIntel: Show autocomplete",
    "keys": ["ctrl+space"],
    "command": "code_intel_auto_complete"
  },
  {
    "caption": "SublimeCodeIntel: Go to Python definition",
    "keys": ["alt+e", "alt+g"],
    "command": "goto_python_definition"
  },
  {
    "caption": "SublimeCodeIntel: Back to Python definition",
    "keys": ["alt+e", "alt+b"],
    "command": "back_to_python_definition"
  },

  // ---------------------------------------------------------------------------
  // -- SublimeHaskell --
  // ---------------------------------------------------------------------------

  {
    "caption": "SublimeHaskell: Go to declaration",
    "keys": ["alt+h", "alt+d"],
    "command": "sublime_haskell_go_to_declaration",
    "context":
    [
      {
        "key": "is_haskell_source"
      }
    ]
  },
  {
    "caption": "SublimeHaskell: Show type",
    "keys": ["alt+h", "alt+t"],
    "command": "sublime_haskell_show_type",
    "context":
    [
      {
        "key" : "is_haskell_source"
      }
    ]
  },
  {
    "caption": "SublimeHaskell: Insert type",
    "keys": ["alt+h", "alt+i"],
    "command": "sublime_haskell_insert_type",
    "context":
    [
      {
        "key" : "is_haskell_source"
      }
    ]
  },
  {
    "caption": "SublimeHaskell: Symbol Info",
    "keys": ["alt+h", "alt+s"],
    "command": "sublime_haskell_symbol_info",
    "context":
    [
      {
        "key" : "is_haskell_source"
      }
    ]
  },
  {
    "caption": "SublimeHaskell: Show autocomplete",
    "keys": ["."],
    "command": "sublime_haskell_complete",
    "args":
    {
      "characters": "."
    },
    "context":
    [
      {
        "key": "is_haskell_source"
      },
      {
        "key": "auto_completion_popup"
      },
      {
        "key": "is_module_completion"
      }
    ]
  },
  {
    "caption": "SublimeHaskell: Show autocomplete",
    "keys": ["("],
    "command": "sublime_haskell_complete",
    "args":
    {
      "characters": "("
    },
    "context":
    [
      {
        "key": "is_haskell_source"
      },
      {
        "key": "auto_completion_popup"
      },
      {
        "key": "is_import_completion"
      }
    ]
  },
  {
    "caption": "SublimeHaskell: Next error",
    "keys": ["alt+h", "alt+j"],
    "command": "sublime_haskell_next_error",
    "context":
    [
      {
        "key": "is_haskell_source"
      }
    ]
  },
  {
    "caption": "SublimeHaskell: Previous error",
    "keys": ["alt+h", "alt+p"],
    "command": "sublime_haskell_previous_error",
    "context":
    [
      {
        "key": "is_haskell_source"
      }
    ]
  },
  {
    "caption": "SublimeHaskell: Show error checker",
    "keys": ["alt+h", "alt+e"],
    "command": "show_panel",
    "args":
    {
      "panel": "output.haskell_error_checker"
    }
  },

  // ---------------------------------------------------------------------------
  // -- SublimeREPL --
  // ---------------------------------------------------------------------------

  {
    "caption": "SublimeREPL: Evaluate current line/selection in active REPL",
    "keys": ["alt+r", "alt+e"],
    "command": "repl_transfer_current",
    "args":
    {
      "scope": "selection"
    },
    "context":
    [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true
      }
    ]
  },
  {
    "keys": ["alt+r", "alt+e"],
    "command": "repl_transfer_current",
    "args":
    {
      "scope": "lines"
    },
    "context":
    [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": false
      }
    ]
  },
  {
    "caption": "SublimeREPL: Transfer current line/selection in active REPL",
    "keys": ["alt+r", "alt+t"],
    "command": "repl_transfer_current",
    "args":
    {
      "scope": "selection",
      "action":"view_write"
    },
    "context":
    [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": false
      }
    ]
  },
  {
    "keys": ["alt+r", "alt+t"],
    "command": "repl_transfer_current",
    "args":
    {
      "scope": "lines",
      "action":"view_write"
    },
    "context":
    [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true
      }
    ]
  },
  {
    "caption": "SublimeREPL: Open GHCi in REPL",
    "keys": ["alt+r", "alt+h"],
    "command": "run_existing_window_command",
    "args":
    {
      "id": "repl_haskell",
      "file": "config/Haskell/Main.sublime-menu"
    }
  },
  {
    "caption": "SublimeREPL: Open Shell in REPL",
    "keys": ["alt+r", "alt+s"],
    "command": "run_existing_window_command",
    "args":
    {
      "id": "repl_shell",
      "file": "config/Shell/Main.sublime-menu"
    }
  },
  {
    "caption": "SublimeREPL: Open Octave in REPL",
    "keys": ["alt+r", "alt+o", "alt+o"],
    "command": "run_existing_window_command",
    "args":
    {
      "id": "repl_octave",
      "file": "config/Octave/Main.sublime-menu"
    }
  },
  {
    "caption": "SublimeREPL: Open Python shell in REPL",
    "keys": ["alt+r", "alt+p", "alt+p"],
    "command": "run_existing_window_command",
    "args":
    {
      "id": "repl_python",
      "file": "config/Python/Main.sublime-menu"
    }
  },
  {
    "caption": "SublimeREPL: Run current file in Python shell in REPL",
    "keys": ["alt+r", "alt+p", "alt+r"],
    "command": "run_existing_window_command", "args":
    {
      "id": "repl_python_run",
      "file": "config/Python/Main.sublime-menu"
    }
  },
  {
    "caption": "SublimeREPL: Run current file in PDB in REPL",
    "keys": ["alt+r", "alt+p", "alt+d"],
    "command": "run_existing_window_command",
    "args":
    {
      "id": "repl_python_pdb",
      "file": "config/Python/Main.sublime-menu"
    }
  },
  {
    "caption": "SublimeREPL: Open iPython shell in REPL",
    "keys": ["alt+r", "alt+p", "alt+i"],
    "command": "run_existing_window_command",
    "args":
    {
      "id": "repl_python_ipython",
      "file": "config/Python/Main.sublime-menu"
    }
  }

  // ---------------------------------------------------------------------------
  // -- Sublimerge Pro --
  // ---------------------------------------------------------------------------

]